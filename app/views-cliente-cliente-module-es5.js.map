{"version":3,"sources":["webpack:///src/app/views/cliente/cliente.component.ts","webpack:///src/app/views/cliente/cliente-routing.module.ts","webpack:///src/app/views/cliente/cliente.module.ts","webpack:///src/app/views/cliente/cliente.component.html"],"names":["ClienteComponent","ApiService","toastr","carregando","upcarregando","cliente","parametro","parametroCriar","buscaCliente","listCliente","subscribe","retorno","id","delCliente","returno","success","forEach","pro","name","data","categoria","primaryModal","show","error","updateCliente","hide","primaryModal2","addCliente","template","routes","path","component","title","ClienteRoutingModule","imports","forChild","exports","ClienteModule","forRoot","declarations"],"mappings":"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","file":"views-cliente-cliente-module-es5.js","sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from '../../service/api.service';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\n\n@Component({\n  templateUrl: 'cliente.component.html'\n})\nexport class ClienteComponent implements OnInit {\n  @ViewChild('primaryModal') public primaryModal: ModalDirective;\n  @ViewChild('primaryModal2') public primaryModal2: ModalDirective;\n  constructor(private ApiService: ApiService,private toastr: ToastrService){\n  }\n  carregando = false;\n  upcarregando = false;\n  cliente = [];\n  parametro = {\n        \"id\": '',\n        \"name\": '',\n        \"data\": ''\n  };\n  parametroCriar = {\n        \"name\": '',\n        \"data\": ''\n  };\n  ngOnInit(): void {\n    this.carregando = true;\n    this.buscaCliente();\n    }\n\n  buscaCliente(){\n    this.ApiService.listCliente().subscribe(retorno => {\n      this.cliente = retorno;\n      this.carregando = false;\n    })\n  }\n\n  excluir(id){\n    this.carregando = true;\n    this.ApiService.delCliente(id).subscribe(returno =>{\n      this.toastr.success(\"Cliente Deletado com sucesso\", \"Cliente\");\n      this.buscaCliente();\n    })\n  }\n\n  update(id){\n    this.cliente.forEach(pro =>{\n      if(pro.id == id){\n        this.parametro.id = pro.id;\n        this.parametro.name = pro.name;\n        this.parametro.data = pro.categoria;\n      }\n    })\n    this.primaryModal.show()\n  }\n\n  updateCliente(){\n    if(this.parametro.name == null || this.parametro.data == null){\n      this.toastr.error('Campos obrigatorio vazio','Erro');\n      return null;\n    }\n    this.upcarregando = true;\n    this.ApiService.updateCliente(this.parametro).subscribe(retorno => {\n      if(retorno.error){\n        this.toastr.error(retorno.error, 'Erro!!');\n        this.upcarregando = false;\n        return null;\n      }\n      this.toastr.success(\"Cliente Alterado com sucesso\", 'Sucesso!!');\n      this.upcarregando = false;\n      this.carregando = true;\n      this.buscaCliente();\n      this.primaryModal.hide()\n    })\n\n  }\n\n  criar(){\n    this.primaryModal2.show()\n  }\n\n  criarModal(){\n    if(this.parametroCriar.name == '' || this.parametroCriar.data == ''){\n      this.toastr.error('Campos obrigatorio vazio','Erro');\n      return null;\n    }\n    this.upcarregando = true;\n    this.ApiService.addCliente(this.parametroCriar).subscribe(retorno => {\n      if(retorno.error){\n        this.toastr.error(retorno.error, 'Erro!!');\n        this.upcarregando = false;\n        return null;\n      }\n      this.toastr.success(\"Cliente Criado com sucesso\", 'Sucesso!!');\n      this.upcarregando = false;\n      this.carregando = true;\n      this.buscaCliente();\n      this.primaryModal2.hide()\n    })\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClienteComponent } from './cliente.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClienteComponent,\n    data: {\n      title: 'cliente'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClienteRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from '@angular/common'; \nimport { ClienteComponent } from './cliente.component';\nimport { ClienteRoutingModule } from './cliente-routing.module';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  imports: [\n    ContentLoaderModule,\n    CommonModule,\n    FormsModule,\n    ClienteRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  declarations: [ ClienteComponent ]\n})\nexport class ClienteModule { }\n","export default \"<bullet-list-content-loader *ngIf=\\\"carregando\\\"></bullet-list-content-loader>\\n<div class=\\\"row\\\" *ngIf=\\\"!carregando\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-align-justify\\\"></i> Clientes\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary float-right btn-sm\\\" (click)=\\\"criar()\\\">+ Novo</button>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-bordered table-striped table-sm\\\">\\n          <thead>\\n            <tr>\\n              <th>ID</th>\\n              <th>Nome</th>\\n              <th>Data de Nacimento</th>\\n              <th>Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let clientes of cliente\\\">\\n              <td>{{clientes?.id}}</td>\\n              <td>{{clientes?.name}}</td>\\n              <td>{{clientes?.data}}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"update(clientes?.id)\\\">Editar</button> \\n                | \\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"excluir(clientes?.id)\\\">Excluir</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #primaryModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Editar Cliente</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"primaryModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <bullet-list-content-loader *ngIf=\\\"upcarregando\\\"></bullet-list-content-loader>\\n      <form (ngSubmit)=\\\"updateCliente()\\\" *ngIf=\\\"!upcarregando\\\">\\n      <div class=\\\"modal-body\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Nome do Cliente</span>\\n            </div>\\n            <input id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"parametro.name\\\" value=\\\"parametro.name\\\" type=\\\"text\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Data de Nascimento</span>\\n            </div>\\n            <input id=\\\"data\\\" name=\\\"data\\\" [(ngModel)]=\\\"parametro.data\\\" value=\\\"parametro.data\\\" type=\\\"date\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"primaryModal.hide()\\\">Fechar</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Salvar</button>\\n      </div>\\n    </form>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\\n\\n<div bsModal #primaryModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Cadastrar Cliente</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"primaryModal2.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <bullet-list-content-loader *ngIf=\\\"upcarregando\\\"></bullet-list-content-loader>\\n      <form (ngSubmit)=\\\"criarModal()\\\" *ngIf=\\\"!upcarregando\\\">\\n      <div class=\\\"modal-body\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Nome do Cliente</span>\\n            </div>\\n            <input id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"parametroCriar.name\\\" type=\\\"text\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Data de Nascimento</span>\\n            </div>\\n            <input id=\\\"data\\\" name=\\\"data\\\" [(ngModel)]=\\\"parametroCriar.data\\\" type=\\\"date\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"primaryModal2.hide()\\\">Fechar</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Salvar</button>\\n      </div>\\n    </form>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\";"]}