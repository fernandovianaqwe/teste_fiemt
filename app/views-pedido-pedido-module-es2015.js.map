{"version":3,"sources":["./src/app/views/pedido/pedido.component.ts","./src/app/views/pedido/pedido-routing.module.ts","./src/app/views/pedido/pedido.component.html","./src/app/views/pedido/pedido.module.ts"],"names":[],"mappings":"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","file":"views-pedido-pedido-module-es2015.js","sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from '../../service/api.service';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\n\n@Component({\n  templateUrl: 'pedido.component.html'\n})\nexport class PedidoComponent implements OnInit {\n  @ViewChild('primaryModal') public primaryModal: ModalDirective;\n  @ViewChild('primaryModal2') public primaryModal2: ModalDirective;\n  constructor(private ApiService: ApiService,private toastr: ToastrService){\n  }\n  carregando = false;\n  upcarregando = false;\n  produtoEscolhido = '';\n  pedido = [];\n  valortotal = 0;\n  quantidade = 0;\n  produtostela = [];\n\n  parametroCriar = {\n        \"cliente_id\": '',\n        \"valortotal\": 0,\n        \"produtos\": []\n  };\n\n  cliente = [{\n    \"id\": \"1\",\n    \"name\": \"name\"\n  }];\n\n  produto = [{\n    \"id\": \"1\",\n    \"name\": \"name\",\n    \"valor\": 0\n  }];\n\n  ngOnInit(): void {\n    this.carregando = true;\n    this.buscaPedido();\n    this.buscarClientes();\n    this.buscarProdutos();\n    }\n\n  buscaPedido(){\n    this.ApiService.listPedido().subscribe(retorno => {\n      this.pedido = retorno;\n      this.carregando = false;\n    })\n  }\n\n  excluir(id){\n    this.carregando = true;\n    this.ApiService.delPedido(id).subscribe(returno =>{\n      this.toastr.success(\"Pedido Deletado com sucesso\", \"Pedido\");\n      this.buscaPedido();\n    })\n  }\n\n  buscarClientes(){\n    this.ApiService.listCliente().subscribe(retorno => {\n      this.cliente = retorno;\n    })\n  }\n\n  buscarProdutos(){\n    this.ApiService.listProduto().subscribe(retorno => {\n      this.produto = retorno;\n    })\n  }\n\n\n  criar(){\n    this.primaryModal2.show()\n  }\n\n  criarModal(){\n    if(this.parametroCriar.cliente_id == '' || this.valortotal == 0 || this.produtostela == []){\n      this.toastr.error('Campos obrigatorio vazio','Erro');\n      return null;\n    }\n    this.upcarregando = true;\n    this.parametroCriar.produtos = this.produtostela;\n    this.parametroCriar.valortotal = this.valortotal;\n    this.ApiService.addPedido(this.parametroCriar).subscribe(retorno => {\n      if(retorno.error){\n        this.toastr.error(retorno.error, 'Erro!!');\n        this.upcarregando = false;\n        return null;\n      }\n      this.toastr.success(\"Pedido Criado com sucesso n\\ Valor total: \" + this.valortotal, 'Sucesso!!');\n      this.upcarregando = false;\n      this.carregando = true;\n      this.buscaPedido();\n      this.primaryModal2.hide()\n    })\n\n  }\n\n  addProduto(){\n    var name = '';\n    var valor = 0;\n    if(this.produtoEscolhido == '' || this.quantidade == 0){\n      this.toastr.error('Campos Produto ou quantidade vazio','Erro');\n      return null;\n    }\n    this.produto.forEach(pro =>{\n      if(pro.id == this.produtoEscolhido){\n        name = pro.name;\n        valor = pro.valor;\n      }\n    })\n    if(this.produtostela == []){\n      this.produtostela =[\n        {\n          \"name\": name,\n          \"valor\": this.quantidade * valor,\n          \"quantidade\": this.quantidade,\n          \"produto_id\": this.produtoEscolhido\n        }\n      ]\n    }else{\n      this.produtostela.push( {\n        \"name\": name,\n        \"valor\": this.quantidade * valor,\n        \"quantidade\": this.quantidade,\n        \"produto_id\": this.produtoEscolhido\n      })\n    }\n\n    this.valortotal = this.valortotal + (this.quantidade * valor);\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PedidoComponent } from './pedido.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PedidoComponent,\n    data: {\n      title: 'Pedido'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PedidoRoutingModule {}\n","export default \"<bullet-list-content-loader *ngIf=\\\"carregando\\\"></bullet-list-content-loader>\\n<div class=\\\"row\\\" *ngIf=\\\"!carregando\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-align-justify\\\"></i> Produtos\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary float-right btn-sm\\\" (click)=\\\"criar()\\\">+ Novo Pedido</button>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-bordered table-striped table-sm\\\">\\n          <thead>\\n            <tr>\\n              <th>ID Pedido</th>\\n              <th>ID do Cliente</th>\\n              <th>Nome do Produto</th>\\n              <th>Quantidade</th>\\n              <th>Valor Unitario</th>\\n              <th>Valor Total</th>\\n              <th>Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let pedidos of pedido\\\">\\n              <td>{{pedidos?.id_pedido}}</td>\\n              <td>{{pedidos?.id_cliente}}</td>\\n              <td>{{pedidos?.nome_produto}}</td>\\n              <td>{{pedidos?.quantidade}}</td>\\n              <td>{{pedidos?.valor | currency:'BRL'}}</td>\\n              <td>{{pedidos?.valor_total | currency:'BRL'}}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"excluir(pedidos?.id_pedido)\\\">Excluir</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <p>OBS: Pedidos sepados pelo \\\"ID Pedido\\\"</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #primaryModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Fazer Pedido</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"primaryModal2.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <bullet-list-content-loader *ngIf=\\\"upcarregando\\\"></bullet-list-content-loader>\\n      <form (ngSubmit)=\\\"criarModal()\\\" *ngIf=\\\"!upcarregando\\\">\\n      <div class=\\\"modal-body\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Cliente</span>\\n            </div>\\n            <select name=\\\"cliente_id\\\" [(ngModel)]=\\\"parametroCriar.cliente_id\\\" class=\\\"form-control\\\">\\n              <option value=\\\"null\\\" [disabled]=\\\"true\\\" >Selecione o Cliente</option>\\n              <option *ngFor=\\\"let cat of cliente\\\" [value]=\\\"cat.id\\\">{{cat.name}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">Selecionar produto</span>\\n          </div>\\n          <select name=\\\"produtoEscolhido\\\" [(ngModel)]=\\\"produtoEscolhido\\\" class=\\\"form-control\\\">\\n            <option value=\\\"null\\\" [disabled]=\\\"true\\\" >Selecione o Produto</option>\\n            <option *ngFor=\\\"let cat of produto\\\" [value]=\\\"cat.id\\\">{{cat.name}}</option>\\n          </select>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Quantidade do Produto</span>\\n            </div>\\n            <input id=\\\"quantidade\\\" name=\\\"quantidade\\\" [(ngModel)]=\\\"quantidade\\\" type=\\\"number\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n          <button type=\\\"button\\\" (click)=\\\"addProduto()\\\" class=\\\"btn btn-secondary float-right\\\" >Adiconar Produto</button>\\n          <!-- <div class=\\\"input-group mb-4\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Valor R$</span>\\n            </div>\\n            <input id=\\\"valor\\\" name=\\\"valor\\\" [(ngModel)]=\\\"parametroCriar.valor\\\" type=\\\"number\\\" class=\\\"form-control\\\" required>\\n          </div> -->\\n          <p>Valor Total : {{ valortotal | currency:'BRL'}}</p>\\n          <p>Produtos:</p>\\n\\n          <div *ngIf=\\\"produtostela != []\\\">\\n            <p *ngFor=\\\"let cat of produtostela\\\">\\n              Nome do Produto: {{cat.name}}, Valor: {{cat.valor| currency:'BRL'}}, Qtd: {{cat.quantidade}}\\n            </p>\\n          </div>  \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"primaryModal2.hide()\\\">Fechar</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Salvar</button>\\n      </div>\\n    </form>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from '@angular/common'; \nimport { PedidoComponent } from './pedido.component';\nimport { PedidoRoutingModule } from './pedido-routing.module';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  imports: [\n    ContentLoaderModule,\n    CommonModule,\n    FormsModule,\n    PedidoRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  declarations: [ PedidoComponent ]\n})\nexport class PedidoModule { }\n"],"sourceRoot":"webpack:///"}