{"version":3,"sources":["webpack:///src/app/views/pedido/pedido.component.ts","webpack:///src/app/views/pedido/pedido-routing.module.ts","webpack:///src/app/views/pedido/pedido.component.html","webpack:///src/app/views/pedido/pedido.module.ts"],"names":["PedidoComponent","ApiService","toastr","carregando","upcarregando","produtoEscolhido","pedido","valortotal","quantidade","produtostela","parametroCriar","cliente","produto","buscaPedido","buscarClientes","buscarProdutos","listPedido","subscribe","retorno","id","delPedido","returno","success","listCliente","listProduto","primaryModal2","show","cliente_id","error","produtos","addPedido","hide","name","valor","forEach","pro","push","template","routes","path","component","data","title","PedidoRoutingModule","imports","forChild","exports","PedidoModule","forRoot","declarations"],"mappings":"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","file":"views-pedido-pedido-module-es5.js","sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from '../../service/api.service';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\n\n@Component({\n  templateUrl: 'pedido.component.html'\n})\nexport class PedidoComponent implements OnInit {\n  @ViewChild('primaryModal') public primaryModal: ModalDirective;\n  @ViewChild('primaryModal2') public primaryModal2: ModalDirective;\n  constructor(private ApiService: ApiService,private toastr: ToastrService){\n  }\n  carregando = false;\n  upcarregando = false;\n  produtoEscolhido = '';\n  pedido = [];\n  valortotal = 0;\n  quantidade = 0;\n  produtostela = [];\n\n  parametroCriar = {\n        \"cliente_id\": '',\n        \"valortotal\": 0,\n        \"produtos\": []\n  };\n\n  cliente = [{\n    \"id\": \"1\",\n    \"name\": \"name\"\n  }];\n\n  produto = [{\n    \"id\": \"1\",\n    \"name\": \"name\",\n    \"valor\": 0\n  }];\n\n  ngOnInit(): void {\n    this.carregando = true;\n    this.buscaPedido();\n    this.buscarClientes();\n    this.buscarProdutos();\n    }\n\n  buscaPedido(){\n    this.ApiService.listPedido().subscribe(retorno => {\n      this.pedido = retorno;\n      this.carregando = false;\n    })\n  }\n\n  excluir(id){\n    this.carregando = true;\n    this.ApiService.delPedido(id).subscribe(returno =>{\n      this.toastr.success(\"Pedido Deletado com sucesso\", \"Pedido\");\n      this.buscaPedido();\n    })\n  }\n\n  buscarClientes(){\n    this.ApiService.listCliente().subscribe(retorno => {\n      this.cliente = retorno;\n    })\n  }\n\n  buscarProdutos(){\n    this.ApiService.listProduto().subscribe(retorno => {\n      this.produto = retorno;\n    })\n  }\n\n\n  criar(){\n    this.primaryModal2.show()\n  }\n\n  criarModal(){\n    if(this.parametroCriar.cliente_id == '' || this.valortotal == 0 || this.produtostela == []){\n      this.toastr.error('Campos obrigatorio vazio','Erro');\n      return null;\n    }\n    this.upcarregando = true;\n    this.parametroCriar.produtos = this.produtostela;\n    this.parametroCriar.valortotal = this.valortotal;\n    this.ApiService.addPedido(this.parametroCriar).subscribe(retorno => {\n      if(retorno.error){\n        this.toastr.error(retorno.error, 'Erro!!');\n        this.upcarregando = false;\n        return null;\n      }\n      this.toastr.success(\"Pedido Criado com sucesso n\\ Valor total: \" + this.valortotal, 'Sucesso!!');\n      this.upcarregando = false;\n      this.carregando = true;\n      this.buscaPedido();\n      this.primaryModal2.hide()\n    })\n\n  }\n\n  addProduto(){\n    var name = '';\n    var valor = 0;\n    if(this.produtoEscolhido == '' || this.quantidade == 0){\n      this.toastr.error('Campos Produto ou quantidade vazio','Erro');\n      return null;\n    }\n    this.produto.forEach(pro =>{\n      if(pro.id == this.produtoEscolhido){\n        name = pro.name;\n        valor = pro.valor;\n      }\n    })\n    if(this.produtostela == []){\n      this.produtostela =[\n        {\n          \"name\": name,\n          \"valor\": this.quantidade * valor,\n          \"quantidade\": this.quantidade,\n          \"produto_id\": this.produtoEscolhido\n        }\n      ]\n    }else{\n      this.produtostela.push( {\n        \"name\": name,\n        \"valor\": this.quantidade * valor,\n        \"quantidade\": this.quantidade,\n        \"produto_id\": this.produtoEscolhido\n      })\n    }\n\n    this.valortotal = this.valortotal + (this.quantidade * valor);\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PedidoComponent } from './pedido.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PedidoComponent,\n    data: {\n      title: 'Pedido'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PedidoRoutingModule {}\n","export default \"<bullet-list-content-loader *ngIf=\\\"carregando\\\"></bullet-list-content-loader>\\n<div class=\\\"row\\\" *ngIf=\\\"!carregando\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-align-justify\\\"></i> Produtos\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary float-right btn-sm\\\" (click)=\\\"criar()\\\">+ Novo Pedido</button>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-bordered table-striped table-sm\\\">\\n          <thead>\\n            <tr>\\n              <th>ID Pedido</th>\\n              <th>ID do Cliente</th>\\n              <th>Nome do Produto</th>\\n              <th>Quantidade</th>\\n              <th>Valor Unitario</th>\\n              <th>Valor Total</th>\\n              <th>Ações</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let pedidos of pedido\\\">\\n              <td>{{pedidos?.id_pedido}}</td>\\n              <td>{{pedidos?.id_cliente}}</td>\\n              <td>{{pedidos?.nome_produto}}</td>\\n              <td>{{pedidos?.quantidade}}</td>\\n              <td>{{pedidos?.valor | currency:'BRL'}}</td>\\n              <td>{{pedidos?.valor_total | currency:'BRL'}}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"excluir(pedidos?.id_pedido)\\\">Excluir</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <p>OBS: Pedidos sepados pelo \\\"ID Pedido\\\"</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #primaryModal2=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Fazer Pedido</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"primaryModal2.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <bullet-list-content-loader *ngIf=\\\"upcarregando\\\"></bullet-list-content-loader>\\n      <form (ngSubmit)=\\\"criarModal()\\\" *ngIf=\\\"!upcarregando\\\">\\n      <div class=\\\"modal-body\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Cliente</span>\\n            </div>\\n            <select name=\\\"cliente_id\\\" [(ngModel)]=\\\"parametroCriar.cliente_id\\\" class=\\\"form-control\\\">\\n              <option value=\\\"null\\\" [disabled]=\\\"true\\\" >Selecione o Cliente</option>\\n              <option *ngFor=\\\"let cat of cliente\\\" [value]=\\\"cat.id\\\">{{cat.name}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">Selecionar produto</span>\\n          </div>\\n          <select name=\\\"produtoEscolhido\\\" [(ngModel)]=\\\"produtoEscolhido\\\" class=\\\"form-control\\\">\\n            <option value=\\\"null\\\" [disabled]=\\\"true\\\" >Selecione o Produto</option>\\n            <option *ngFor=\\\"let cat of produto\\\" [value]=\\\"cat.id\\\">{{cat.name}}</option>\\n          </select>\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Quantidade do Produto</span>\\n            </div>\\n            <input id=\\\"quantidade\\\" name=\\\"quantidade\\\" [(ngModel)]=\\\"quantidade\\\" type=\\\"number\\\" class=\\\"form-control\\\"  required>\\n          </div>\\n          <button type=\\\"button\\\" (click)=\\\"addProduto()\\\" class=\\\"btn btn-secondary float-right\\\" >Adiconar Produto</button>\\n          <!-- <div class=\\\"input-group mb-4\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">Valor R$</span>\\n            </div>\\n            <input id=\\\"valor\\\" name=\\\"valor\\\" [(ngModel)]=\\\"parametroCriar.valor\\\" type=\\\"number\\\" class=\\\"form-control\\\" required>\\n          </div> -->\\n          <p>Valor Total : {{ valortotal | currency:'BRL'}}</p>\\n          <p>Produtos:</p>\\n\\n          <div *ngIf=\\\"produtostela != []\\\">\\n            <p *ngFor=\\\"let cat of produtostela\\\">\\n              Nome do Produto: {{cat.name}}, Valor: {{cat.valor| currency:'BRL'}}, Qtd: {{cat.quantidade}}\\n            </p>\\n          </div>  \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"primaryModal2.hide()\\\">Fechar</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Salvar</button>\\n      </div>\\n    </form>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CommonModule } from '@angular/common'; \nimport { PedidoComponent } from './pedido.component';\nimport { PedidoRoutingModule } from './pedido-routing.module';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  imports: [\n    ContentLoaderModule,\n    CommonModule,\n    FormsModule,\n    PedidoRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  declarations: [ PedidoComponent ]\n})\nexport class PedidoModule { }\n"]}